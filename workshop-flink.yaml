version: '3.4'

services:
  generate-cli:
    labels:
        component: generate-cli
    image: ${FLINK_JOBS_IMAGE}
    networks:
      - workshop
    entrypoint:
      - /wait-for-it.sh
      - generate-jobmanager:8081
      - --timeout=300
      - --
      - /cli_entrypoint.sh
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'generate-jobmanager'
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_JOB_CLASS: com.nextbreakpoint.flink.jobs.GenerateJob
      SAVEPOINT: ${SAVEPOINT}
      BOOTSTRAP_SERVERS: kafka:9092
      PARALLELISM: ${TASK_MANAGER_REPLICAS}
      OUTPUT_TOPIC_NAME: test-input
      PRODUCER_CLIENT_ID: aggregate
    logging:
      options:
        labels: "component"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 100M
        reservations:
          cpus: '0.01'
          memory: 100M
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  generate-jobmanager:
    labels:
        component: generate-jobmanager
    image: ${FLINK_IMAGE}
    networks:
      - workshop
    entrypoint:
        - /wait-for-it.sh
        - graphite:80
        - --timeout=300
        - --
        - /custom_entrypoint.sh
    command: 'jobmanager'
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'generate-jobmanager'
      FLINK_JM_HEAP: 128
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_GRAPHITE_HOST: ${GRAPHITE_HOST}
      FLINK_GRAPHITE_PREFIX: nextbreakpoint.workshop-flink.${ENVIRONMENT}.generate
      FLINK_SAVEPOINTS_LOCATION: ${FLINK_SAVEPOINTS_LOCATION}
      FLINK_CHECKPOINTS_LOCATION: ${FLINK_CHECKPOINTS_LOCATION}
      FLINK_FS_CHECKPOINTS_LOCATION: ${FLINK_FS_CHECKPOINTS_LOCATION}
    volumes:
      - generate-jobmanager-data:/data
    logging:
      options:
        labels: "component"
    ports:
      - target: 8081
        published: 18081
        protocol: tcp
        mode: ingress
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
        reservations:
          cpus: '0.1'
          memory: 200M
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  generate-taskmanager:
    labels:
        component: generate-taskmanager
    image: ${FLINK_IMAGE}
    networks:
      - workshop
    entrypoint:
        - /wait-for-it.sh
        - generate-jobmanager:8081
        - --timeout=300
        - --
        - /custom_entrypoint.sh
    command: 'taskmanager'
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'generate-jobmanager'
      FLINK_TM_HEAP: 256
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_GRAPHITE_HOST: ${GRAPHITE_HOST}
      FLINK_GRAPHITE_PREFIX: nextbreakpoint.workshop-flink.${ENVIRONMENT}.generate
      FLINK_SAVEPOINTS_LOCATION: ${FLINK_SAVEPOINTS_LOCATION}
      FLINK_CHECKPOINTS_LOCATION: ${FLINK_CHECKPOINTS_LOCATION}
      FLINK_FS_CHECKPOINTS_LOCATION: ${FLINK_FS_CHECKPOINTS_LOCATION}
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: 1
    volumes:
      - generate-taskmanager-data:/data
    logging:
      options:
        labels: "component"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 300M
        reservations:
          cpus: '0.2'
          memory: 300M
      replicas: ${TASK_MANAGER_REPLICAS}
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.labels.zone
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  aggregate-cli:
    labels:
        component: aggregate-cli
    image: ${FLINK_JOBS_IMAGE}
    networks:
      - workshop
    entrypoint:
      - /wait-for-it.sh
      - aggregate-jobmanager:8081
      - --timeout=300
      - --
      - /cli_entrypoint.sh
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'aggregate-jobmanager'
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_JOB_CLASS: com.nextbreakpoint.flink.jobs.AggregateJob
      SAVEPOINT: ${SAVEPOINT}
      BOOTSTRAP_SERVERS: kafka:9092
      PARALLELISM: ${TASK_MANAGER_REPLICAS}
      SOURCE_TOPIC_NAME: test-input
      OUTPUT_TOPIC_NAME: test-output
      CONSUMER_GROUP_NAME: aggregate
      PRODUCER_CLIENT_ID: aggregate
    logging:
      options:
        labels: "component"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 100M
        reservations:
          cpus: '0.01'
          memory: 100M
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  aggregate-jobmanager:
    labels:
        component: aggregate-jobmanager
    image: ${FLINK_IMAGE}
    networks:
      - workshop
    entrypoint:
        - /wait-for-it.sh
        - graphite:80
        - --timeout=300
        - --
        - /custom_entrypoint.sh
    command: 'jobmanager'
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'aggregate-jobmanager'
      FLINK_JM_HEAP: 128
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_GRAPHITE_HOST: ${GRAPHITE_HOST}
      FLINK_GRAPHITE_PREFIX: nextbreakpoint.workshop-flink.${ENVIRONMENT}.aggregate
      FLINK_SAVEPOINTS_LOCATION: ${FLINK_SAVEPOINTS_LOCATION}
      FLINK_CHECKPOINTS_LOCATION: ${FLINK_CHECKPOINTS_LOCATION}
      FLINK_FS_CHECKPOINTS_LOCATION: ${FLINK_FS_CHECKPOINTS_LOCATION}
    volumes:
      - aggregate-jobmanager-data:/data
    logging:
      options:
        labels: "component"
    ports:
      - target: 8081
        published: 28081
        protocol: tcp
        mode: ingress
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
        reservations:
          cpus: '0.1'
          memory: 200M
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  aggregate-taskmanager:
    labels:
        component: aggregate-taskmanager
    image: ${FLINK_IMAGE}
    networks:
      - workshop
    entrypoint:
        - /wait-for-it.sh
        - aggregate-jobmanager:8081
        - --timeout=300
        - --
        - /custom_entrypoint.sh
    command: 'taskmanager'
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'aggregate-jobmanager'
      FLINK_TM_HEAP: 1000
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_GRAPHITE_HOST: ${GRAPHITE_HOST}
      FLINK_GRAPHITE_PREFIX: nextbreakpoint.workshop-flink.${ENVIRONMENT}.aggregate
      FLINK_SAVEPOINTS_LOCATION: ${FLINK_SAVEPOINTS_LOCATION}
      FLINK_CHECKPOINTS_LOCATION: ${FLINK_CHECKPOINTS_LOCATION}
      FLINK_FS_CHECKPOINTS_LOCATION: ${FLINK_FS_CHECKPOINTS_LOCATION}
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: 1
    volumes:
      - aggregate-taskmanager-data:/data
    logging:
      options:
        labels: "component"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1100M
        reservations:
          cpus: '0.2'
          memory: 1100M
      replicas: ${TASK_MANAGER_REPLICAS}
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.labels.zone
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  print-cli:
    labels:
        component: print-cli
    image: ${FLINK_JOBS_IMAGE}
    networks:
      - workshop
    entrypoint:
      - /wait-for-it.sh
      - print-jobmanager:8081
      - --timeout=300
      - --
      - /cli_entrypoint.sh
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'print-jobmanager'
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_JOB_CLASS: com.nextbreakpoint.flink.jobs.PrintJob
      SAVEPOINT: ${SAVEPOINT}
      BOOTSTRAP_SERVERS: kafka:9092
      PARALLELISM: ${TASK_MANAGER_REPLICAS}
      SOURCE_TOPIC_NAME: test-output
      CONSUMER_GROUP_NAME: print
    logging:
      options:
        labels: "component"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 100M
        reservations:
          cpus: '0.01'
          memory: 100M
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  print-jobmanager:
    labels:
        component: print-jobmanager
    image: ${FLINK_IMAGE}
    networks:
      - workshop
    entrypoint:
        - /wait-for-it.sh
        - graphite:80
        - --timeout=300
        - --
        - /custom_entrypoint.sh
    command: 'jobmanager'
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'print-jobmanager'
      FLINK_JM_HEAP: 128
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_GRAPHITE_HOST: ${GRAPHITE_HOST}
      FLINK_GRAPHITE_PREFIX: nextbreakpoint.workshop-flink.${ENVIRONMENT}.print
      FLINK_SAVEPOINTS_LOCATION: ${FLINK_SAVEPOINTS_LOCATION}
      FLINK_CHECKPOINTS_LOCATION: ${FLINK_CHECKPOINTS_LOCATION}
      FLINK_FS_CHECKPOINTS_LOCATION: ${FLINK_FS_CHECKPOINTS_LOCATION}
    volumes:
      - print-jobmanager-data:/data
    logging:
      options:
        labels: "component"
    ports:
      - target: 8081
        published: 38081
        protocol: tcp
        mode: ingress
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
        reservations:
          cpus: '0.1'
          memory: 200M
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

  print-taskmanager:
    labels:
        component: print-taskmanager
    image: ${FLINK_IMAGE}
    networks:
      - workshop
    entrypoint:
        - /wait-for-it.sh
        - print-jobmanager:8081
        - --timeout=300
        - --
        - /custom_entrypoint.sh
    command: 'taskmanager'
    environment:
      JOB_MANAGER_RPC_ADDRESS: 'print-jobmanager'
      FLINK_TM_HEAP: 256
      FLINK_ENVIRONMENT: ${ENVIRONMENT}
      FLINK_GRAPHITE_HOST: ${GRAPHITE_HOST}
      FLINK_GRAPHITE_PREFIX: nextbreakpoint.workshop-flink.${ENVIRONMENT}.print
      FLINK_SAVEPOINTS_LOCATION: ${FLINK_SAVEPOINTS_LOCATION}
      FLINK_CHECKPOINTS_LOCATION: ${FLINK_CHECKPOINTS_LOCATION}
      FLINK_FS_CHECKPOINTS_LOCATION: ${FLINK_FS_CHECKPOINTS_LOCATION}
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: 1
    volumes:
      - print-taskmanager-data:/data
    logging:
      options:
        labels: "component"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 300M
        reservations:
          cpus: '0.2'
          memory: 300M
      replicas: ${TASK_MANAGER_REPLICAS}
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.labels.zone
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        window: 120s

networks:
  workshop:
    external: true

volumes:
    generate-jobmanager-data:
    generate-taskmanager-data:
    aggregate-jobmanager-data:
    aggregate-taskmanager-data:
    print-jobmanager-data:
    print-taskmanager-data:
